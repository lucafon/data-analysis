getwd()
getwd()
source('~/.active-rstudio-document', echo=TRUE)
dir()
myfunction()
myfunction
source("myfunction.R")
myfunction
myfunction()
a
dir()
x <- 1
x
print(x)
msg <- "hello"
print(msg)
print(msg[1])
## hi
x <- 1:20
x
x <- true
x <- TRUE
x_
x
x <- 1L
x
x <- 1/0
x
x <- 0/0
x
x <- 1:20
length(x)
install.packages("swirl")
package_version("swirl")
packageVersion("swirl")
packageVersion("swirl")
library(swirl)
library(swirl)
rm(list=ls())
library(swirl)
install_from_swirl("R Programming")
swirl()
5 +7
x <- 5 + 7
x
y <- x - 3
y
c(1.1, 9, 3.14)
z <- c(1.1, 9, 3.14)
?c
z
h <- c(z, 555, z)
c(z, 555, z)
z * z + 100
z * 2 + 100
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_div
swirl()
getwd()
ls()
x <- 9
ls()
list.files()
?list.files
args(list.files)
old.dir <- getwd()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
dir()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
file.path("folder1", "folder2")
?dir.create
dir.create(file.path("testdir2", "testdir3"))
dir.create(file.path("testdir2", "testdir3"), recursive = TRUE)
unlink("testdir2", recursive = TRUE)
setwd(old.dir)
unlink("testdir", recursive = TRUE)
y <- c(1.7, "a")
y
y <- c(TRUE, 2)
y
ls()
remove(list = ls())
ls()
x <- 0.6
class(x)
x <- 0:6
class(x)
as.numeric(x)
as.logical(x)
as.complex(x)
x <- list("a", 1, TRUE)
x
x <- matrix(data = NA, nrow = 2, ncol = 3)
x
dim(x)
attributes(x)
x <- matrix(data = 1:6, nrow = 2, ncol = 3)
x
x <- c(1:10)
x
dim(x) <- c(2,5)
x
x <- 1:3
y <- 10:12
cbind(x,y)
swirl()
1:20
pi:10
15:1
`:`
?`:`
seq(1,20)
seq(0,10,by=0.5)
seq(5,10,length=30)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0,1,2), times =10)
rep(c(0,1,2), each = 10)
x <- factor(c("yes", "no", "yes"))
x
table(x)
unclass(x)
x
x <- factor(c("yes", "no", "yes"), levels = c("yes", "no"))
x
table(x)
unclass(x)
x = c(1,2)
x
x <- c(1,2,3)
x
?`<-`
?`=`
x = data.frame(foo = c(1,1,1), bar = c(T,F,T))
x
nrow(x)
ncols(x)
ncol(x)
x = c(1,2,3)
names(x)
x = names("foo", "bar", "luca")
names(x) = c("foo", "bar", "luca")
names()
names(x)
x
swirl()
num_vect <- c(0.5,55,-10,6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "your_name_here")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, spe = "-")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0 / 0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 11, bar =2, norf = NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(data = 1:20, nrow = 4, ncol = 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
rm(list = ls())
ls()
y <- data.frame(a =1, b = "a")
y
dput(y)
dput(y, file = "y.R")
new.y = dget("y.R")
new.y
getwd()
setwd("/Users/lucafontanili/Documents/workspaceR/data-analysis")
dput(y, file = "y.R")
swirl()
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
5 != 7
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE,FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical("twins", "twins")
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
Sys.Date()
mean(c(2,4,5))
submit()
boring_function("My first function!")
boring_function
submit()
submit()
my_mean(c(4,5,10))
submit()
submit()
submit()
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(sd, c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, c(8, 4, 0))
evaluate()
evaluate(function(x){x[length(x)]}, c(8, 4, 0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("hi", "there")
sumb
submit()
mad_libs(list(place = "home", adjective = "sad", noun = "dog"))
submit()
"I" %p% "love" %p% "R"
"I" %p% "love" %p% "R!"
dataset_url <- "http://s3.amazonaws.com/practice_assignment/diet_data.zip"
download.file(dataset_url, "diet_data.zip")
unzip("diet_data.zip", exdir = "diet_data")
dir(0)
dir()
list.files("diet_data")
andy <- read.csv("diet_data/Andy.csv")
head(andy)
length(andy$Day)
dim(andy)
str(andy)
summary(andy)
names(andy)
andy[1, "Weight"]
andy[30, "Weight"]
andy["Weight"]
weight <- andy["Weight"]
weight
andy[which(andy$Day == 30), "Weight"]
andy[which(andy[,"Day"] == 30), "Weight"]
subset(andy$Weight, andy$Day == 30)
andy_start <- andy[which(andy$Day == 30), "Weight"]
andy_start <- andy[which(andy$Day == 1), "Weight"]
andy_end <- andy[which(andy$Day == 1), "Weight"]
andy_end <- andy[which(andy$Day == 30), "Weight"]
andy_loss <- andy_start - andy_end
andy_loss
files <- list.files("diet_data")
files
files_full <- list.files("diet_data", full.names=TRUE)
files_full
length(files_full)
for(i in 1:length(files_full)) {
dat <- rbind(read.csv(files_full[i]))
}
dat
for(i in 1:length(files_full)) {
dat <- rbind(dat, read.csv(files_full[i]))
}
dat
dat <- data.frame()
for(i in 1:length(files_full)) {
dat <- rbind(dat, read.csv(files_full[i]))
}
dat
dat <- data.frame()
for(i in 1:length(files_full)) {
dat <- rbind(dat, read.csv(files_full[i]))
}
str(dat)
str(dat)
median(dat$Weight)
dat$Weight
median(dat$Weight, na.rm=TRUE)
dat_30 <- dat[which(dat$Day == 30)]
source('~/.active-rstudio-document', echo=TRUE)
dat_30 <- dat[which(dat[, "Day"] == 30)]
files <- list.files("diet_data")
files
files_full <- list.files("diet_data", full.names=TRUE)
files_full
dat <- data.frame()
for(i in 1:length(files_full)) {
dat <- rbind(dat, read.csv(files_full[i]))
}
str(dat)
median(dat$Weight)
dat$Weight
median(dat$Weight, na.rm=TRUE)
dat_30 <- dat[which(dat[, "Day"] == 30)]
dat_30 <- dat[which(dat[, "Day"] == 30),]
dat_30
median(dat_30$Weight)
ls()
dir()
source('~/.active-rstudio-document', echo=TRUE)
source("weightmedian.R")
weightmedian
weightmedian("diet_data", 22)
